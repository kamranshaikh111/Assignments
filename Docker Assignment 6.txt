										DOCKER Hands on Lab 06.

-------------------------------------------------------------------------------------------------------------------------------
1. **Create Directories:**
   - Establish two directories named "DHUB" and "AWSECR."

Ans:

root@DESKTOP-Q1VPUEC:~# mkdir DHUB
root@DESKTOP-Q1VPUEC:~# mkdir AWSECR

-------------------------------------------------------------------------------------------------------------------------------
 
2. **Dockerfile Creation:**
	 - Develop two Dockerfiles to construct custom images with the following specifications:
     - Base image: Ubuntu
     - Install packages: httpd
     - Add "I am from Docker Hub" to the index.html file for DHUB directory and "I am from ECR" for AWSECR directory.
     - Set environment variable ENV_NAME=DHUB for the DHUB directory and ENV_NAME=AWSECR for the AWSECR directory.
	 - Start http service using ENTRYPOINT 
 	 -  Expose port 80.

Ans:

root@DESKTOP-Q1VPUEC:~# cd DHUB/
root@DESKTOP-Q1VPUEC:DHUB# vim dockerfile
root@DESKTOP-Q1VPUEC:DHUB# vim index_dhub.html
root@DESKTOP-Q1VPUEC:cp /etc/apache2/apache2.conf .
root@DESKTOP-Q1VPUEC:DHUB# cat dockerfile

FROM ubuntu:latest
RUN apt-get update && apt-get install -y apache2
COPY index.html /var/www/html/index.html
COPY apache2.conf /etc/apache2/apache2.conf
ENV ENV_NAME=DHUB
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
EXPOSE 80

root@DESKTOP-Q1VPUEC:DHUB# cat index_dhub.html
I am from Docker Hub

root@DESKTOP-Q1VPUEC:DHUB# cd ../AWSECR/
root@DESKTOP-Q1VPUEC:AWSECR# vim dockerfile
root@DESKTOP-Q1VPUEC:AWSECR# vim index_awsecr.html
root@DESKTOP-Q1VPUEC:cp /etc/apache2/apache2.conf .
root@DESKTOP-Q1VPUEC:AWSECR# cat dockerfile

FROM ubuntu:latest
RUN apt-get update && apt-get install -y apache2
COPY index.html /var/www/html/index.html
COPY apache2.conf /etc/apache2/apache2.conf
ENV ENV_NAME=AWSECR
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
EXPOSE 80

root@DESKTOP-Q1VPUEC:AWSECR# cat index_awsecr.html
I am from ECR

-------------------------------------------------------------------------------------------------------------------------------
 
3. **Build Custom Images:**
   - Utilize the docker build command to build the custom images.
   - List all available images using docker images.

Ans:

root@DESKTOP-Q1VPUEC:DHUB# docker build -t dhub:v1 .
[+] Building 153.6s (8/8) FINISHED                                                                                    docker:default
 => [internal] load .dockerignore                                                                                               0.4s
 => => transferring context: 2B                                                                                                 0.0s
 => [internal] load build definition from dockerfile                                                                            0.6s
 => => transferring dockerfile: 221B                                                                                            0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                                1.5s
 => CACHED [1/3] FROM docker.io/library/ubuntu:latest@sha256:e6173d4dc55e76b87c4af8db8821b1feae4146dd47341e4d431118c7dd060a74   0.0s
 => [internal] load build context                                                                                               0.3s
 => => transferring context: 63B                                                                                                0.0s
 => [2/3] RUN apt-get update &&     apt-get install -y apache2                                                                143.6s
 => [3/3] COPY index_dhub.html /var/www/html/index.html                                                                         1.4s
 => exporting to image                                                                                                          5.0s
 => => exporting layers                                                                                                         4.8s
 => => writing image sha256:16ec73c28fc1fa8d397d556c64da456e849203713328192ca47d2572b407ffb0                                    0.1s
 => => naming to docker.io/library/dhub:v1                                                                                      0.1s

root@DESKTOP-Q1VPUEC:DHUB# cd ../AWSECR/

root@DESKTOP-Q1VPUEC:AWSECR# docker build -t aws:v1 .
[+] Building 30.4s (9/9) FINISHED                                                                                     docker:default
 => [internal] load build definition from dockerfile                                                                            1.2s
 => => transferring dockerfile: 224B                                                                                            0.0s
 => [internal] load .dockerignore                                                                                               1.6s
 => => transferring context: 2B                                                                                                 0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                               24.3s
 => [auth] library/ubuntu:pull token for registry-1.docker.io                                                                   0.0s
 => [1/3] FROM docker.io/library/ubuntu:latest@sha256:e6173d4dc55e76b87c4af8db8821b1feae4146dd47341e4d431118c7dd060a74          0.0s
 => CACHED [2/3] RUN apt-get update &&     apt-get install -y apache2                                                           0.0s
 => [internal] load build context                                                                                               0.7s
 => => transferring context: 58B                                                                                                0.0s
 => [3/3] COPY index_awsecr.html /var/www/html/index.html                                                                       1.0s
 => exporting to image                                                                                                          1.0s
 => => exporting layers                                                                                                         0.8s
 => => writing image sha256:8d1ceee5405e88a334e3f895c53403fb62ba1ce1cbb07196beee493d7ae2391c                                    0.1s
 => => naming to docker.io/library/aws:v1                                                                                       0.2s

root@DESKTOP-Q1VPUEC:AWSECR# docker images
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
aws          v1        8d1ceee5405e   26 seconds ago   233MB
dhub         v1        16ec73c28fc1   4 minutes ago    233MB

-------------------------------------------------------------------------------------------------------------------------------
 
4. **Push Images to Repositories:**
   - Push the Docker image to Docker Hub.
   - Push the Docker image to AWS ECR.

Ans:

root@DESKTOP-Q1VPUEC:DHUB# docker image tag dhub:v1 kamranshaikh111/dhub:v1
root@DESKTOP-Q1VPUEC:DHUB# docker push kamranshaikh111/dhub:v1
The push refers to repository [docker.io/kamranshaikh111/dhub]
86f0795cac25: Pushed
757aa4ae3442: Pushed
8e87ff28f1b5: Mounted from library/ubuntu
v1: digest: sha256:66facf2089d3c1e6a4553005be558cd37b86f899daaed18b6d45e82ec09998b9 size: 948


root@DESKTOP-Q1VPUEC:DHUB# aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 842313196830.dkr.ecr.us-east-1.amazonaws.com
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

root@DESKTOP-Q1VPUEC:DHUB# docker image tag aws:v1 842313196830.dkr.ecr.us-east-1.amazonaws.com/kamran_aws:v1
root@DESKTOP-Q1VPUEC:DHUB# docker push 842313196830.dkr.ecr.us-east-1.amazonaws.com/kamran_aws:v1
The push refers to repository [842313196830.dkr.ecr.us-east-1.amazonaws.com/kamran_aws]
3b4e55e756dc: Pushed
757aa4ae3442: Pushed
8e87ff28f1b5: Pushed
v1: digest: sha256:5a36829569df3ddf7b7ea6a55bec122f42c2952f46970ead545edbedac051ae3 size: 948

-------------------------------------------------------------------------------------------------------------------------------
 
5. **Run Containers:**
   - Execute a container from the Docker Hub image, naming it "I_AM_FROM_DHUB," and mapping host port 8081 to the container.
	docker run -d -p 8081:80 --name I_AM_FROM_DHUB your_docker_hub_image
   - Execute a container from the AWS ECR image, naming it "I_AM_FROM_ECR," and mapping host port 8082 to the container.
	docker run -d -p 8082:80 --name I_AM_FROM_ECR your_aws_ecr_image
 
Ans:

root@DESKTOP-Q1VPUEC:~# docker container run -itd --name=I_AM_FROM_DHUB -p 8081:80  dhub:v1
84e1bdeb1814421d991304cf828a43169f15eba62dd098bdae112342d69a16c5
root@DESKTOP-Q1VPUEC:~# docker container run -itd --name=I_AM_FROM_ECR -p 8082:80  aws:v1
fdd793ad7df936600451c526442610f724f212965a297eec6da554afe0b6b210

root@DESKTOP-Q1VPUEC:~# docker container ls
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                   NAMES
fdd793ad7df9   aws:v1    "apache2ctl -D FOREG…"   6 seconds ago    Up 3 seconds    0.0.0.0:8082->80/tcp, :::8082->80/tcp   I_AM_FROM_ECR
84e1bdeb1814   dhub:v1   "apache2ctl -D FOREG…"   55 seconds ago   Up 52 seconds   0.0.0.0:8081->80/tcp, :::8081->80/tcp   I_AM_FROM_DHUB

root@DESKTOP-Q1VPUEC:~# docker container exec -it I_AM_FROM_DHUB /bin/bash
root@84e1bdeb1814:/# echo $ENV_NAME
DHUB

root@DESKTOP-Q1VPUEC:~# docker container exec -it I_AM_FROM_ECR /bin/bash
root@fdd793ad7df9:/# echo $ENV_NAME
AWSECR

-------------------------------------------------------------------------------------------------------------------------------
 
6. **Access Pages from Browser:**
   - Open a web browser and access the pages:
     - For Docker Hub: http://localhost:8081
     - For AWS ECR: http://localhost:8082
 
This task list guides you through the process of creating custom Docker images, pushing them to Docker Hub and AWS ECR, running containers, and accessing the pages from a browser.

Ans:


root@DESKTOP-Q1VPUEC:~# curl 172.17.0.2
I am from Docker Hub

root@DESKTOP-Q1VPUEC:~# curl 172.17.0.3
I am from ECR

-------------------------------------------------------------------------------------------------------------------------------
